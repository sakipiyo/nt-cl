{"ast":null,"code":"var _jsxFileName = \"/Users/sakip/Documents/theoriacode/jisyu/nt-clone/client/src/pages/Login.jsx\",\n  _s = $RefreshSig$();\nimport { Box, Button, TextField } from \"@mui/material\";\nimport React, { useState } from 'react';\nimport { LoadingButton } from \"@mui/lab\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport authApi from \"../api/authApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const [usernameErrText, setUsernameErrText] = useState(\"\");\n  const [passwordErrText, setPasswordErrText] = useState(\"\");\n  const [confirmErrText, setConfirmErrText] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setUsernameErrText(\"\");\n    setPasswordErrText(\"\");\n    setConfirmErrText(\"\");\n\n    //入力欄の文字列を取得\n    const data = new FormData(e.target);\n    const username = data.get(\"username\").trim();\n    const password = data.get(\"password\").trim();\n    const confirmPassword = data.get(\"confirmPassword\").trim();\n    console.log(username);\n    console.log(password);\n    console.log(confirmPassword);\n    let error = false;\n    if (username === \"\") {\n      error = true;\n      setUsernameErrText(\"名前を入力して下さい\");\n    }\n    if (password === \"\") {\n      error = true;\n      setPasswordErrText(\"パスワードを入力して下さい\");\n    }\n    if (confirmPassword === \"\") {\n      error = true;\n      setConfirmErrText(\"確認用パスワードを入力して下さい\");\n    }\n    if (password !== confirmPassword) {\n      error = true;\n      setConfirmErrText(\"パスワードと確認用パスワードが異なります\");\n    }\n    if (error) return;\n    setLoading(true);\n\n    //新規登録APIを叩く\n    try {\n      const res = await authApi.register({\n        username,\n        password,\n        confirmPassword\n      });\n      setLoading(false);\n      localStorage.setItem(\"token\", res.token);\n      console.log(\"新規登録に成功しました。\");\n      navigate(\"/\");\n    } catch (err) {\n      const errors = err.data.errors;\n      console.log(error);\n      errors.forEach(err => {\n        if (err.param === \"username\") {\n          setUsernameErrText(err.msg);\n        }\n        if (err.param === \"password\") {\n          setPasswordErrText(err.msg);\n        }\n        if (err.param === \"confirmPassword\") {\n          setConfirmErrText(err.msg);\n        }\n      });\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: handleSubmit,\n      noValidate: true,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        id: \"username\",\n        label: \"\\u304A\\u540D\\u524D\",\n        margin: \"normal\",\n        name: \"username\",\n        required: true,\n        helperText: usernameErrText,\n        error: usernameErrText !== \"\",\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        id: \"password\",\n        label: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\",\n        margin: \"normal\",\n        name: \"password\",\n        type: \"password\",\n        required: true,\n        helperText: passwordErrText,\n        error: passwordErrText !== \"\",\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n        sx: {\n          mt: 3,\n          mb: 2\n        },\n        fullWidth: true,\n        type: \"submit\",\n        loading: false,\n        color: \"primary\",\n        variant: \"outlined\",\n        children: \"\\u30ED\\u30B0\\u30A4\\u30F3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      component: Link,\n      to: \"/register\",\n      children: \"\\u30A2\\u30AB\\u30A6\\u30F3\\u30C8\\u3092\\u6301\\u3063\\u3066\\u3044\\u307E\\u305B\\u3093\\u304B\\uFF1F\\u65B0\\u898F\\u767B\\u9332\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"7y+UwCBfpq3U1oGD+2w1tmXCJm0=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Box","Button","TextField","React","useState","LoadingButton","Link","useNavigate","authApi","jsxDEV","_jsxDEV","Login","_s","navigate","usernameErrText","setUsernameErrText","passwordErrText","setPasswordErrText","confirmErrText","setConfirmErrText","loading","setLoading","handleSubmit","e","preventDefault","data","FormData","target","username","get","trim","password","confirmPassword","console","log","error","res","register","localStorage","setItem","token","err","errors","forEach","param","msg","children","component","onSubmit","noValidate","fullWidth","id","label","margin","name","required","helperText","disabled","fileName","_jsxFileName","lineNumber","columnNumber","type","sx","mt","mb","color","variant","to","_c","$RefreshReg$"],"sources":["/Users/sakip/Documents/theoriacode/jisyu/nt-clone/client/src/pages/Login.jsx"],"sourcesContent":["import { Box, Button, TextField } from \"@mui/material\";\nimport React, {useState} from 'react';\nimport { LoadingButton } from \"@mui/lab\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport authApi from \"../api/authApi\";\n\nconst Login = () => {\n    const navigate = useNavigate();\n\n    const [usernameErrText, setUsernameErrText] = useState(\"\");\n    const [passwordErrText, setPasswordErrText] = useState(\"\");\n    const [confirmErrText, setConfirmErrText] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n\n    const handleSubmit = async(e) => {\n        e.preventDefault();\n        setUsernameErrText(\"\");\n        setPasswordErrText(\"\");\n        setConfirmErrText(\"\");\n\n        //入力欄の文字列を取得\n        const data = new FormData(e.target);\n        const username = data.get(\"username\").trim();\n        const password = data.get(\"password\").trim();\n        const confirmPassword = data.get(\"confirmPassword\").trim();\n        console.log(username);\n        console.log(password);\n        console.log(confirmPassword);\n\n        let error = false;\n\n        if(username === \"\"){\n            error = true;\n            setUsernameErrText(\"名前を入力して下さい\");\n        }\n        if(password === \"\"){\n            error = true;\n            setPasswordErrText(\"パスワードを入力して下さい\");\n        }\n        if(confirmPassword === \"\"){\n            error = true;\n            setConfirmErrText(\"確認用パスワードを入力して下さい\");\n        }\n        if(password !== confirmPassword){\n            error = true;\n            setConfirmErrText(\"パスワードと確認用パスワードが異なります\");\n        }\n\n        if (error) return;\n\n        setLoading(true);\n\n        //新規登録APIを叩く\n        try {\n            const res = await authApi.register({\n                username,\n                password,\n                confirmPassword,\n            });\n            setLoading(false);\n            localStorage.setItem(\"token\", res.token);\n            console.log(\"新規登録に成功しました。\");\n            navigate(\"/\");\n        } catch (err) {\n            const errors = err.data.errors;\n            console.log(error);\n            errors.forEach((err) => {\n                if(err.param === \"username\") {\n                    setUsernameErrText(err.msg);\n                }\n                if(err.param === \"password\") {\n                    setPasswordErrText(err.msg);\n                }\n                if(err.param === \"confirmPassword\") {\n                    setConfirmErrText(err.msg);\n                }\n            });\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div>\n        <Box component=\"form\" onSubmit={handleSubmit} noValidate>\n            <TextField \n                fullWidth \n                id=\"username\" \n                label=\"お名前\" \n                margin=\"normal\" \n                name=\"username\" \n                required \n                helperText={usernameErrText}\n                error={usernameErrText !== \"\"}\n                disabled={loading}\n            />\n            <TextField \n                fullWidth \n                id=\"password\" \n                label=\"パスワード\" \n                margin=\"normal\" \n                name=\"password\" \n                type=\"password\"\n                required \n                helperText={passwordErrText}\n                error={passwordErrText !== \"\"}\n                disabled={loading}\n            />\n            <LoadingButton \n                sx={{ mt: 3, mb: 2 }}\n                fullWidth\n                type=\"submit\"\n                loading={false}\n                color=\"primary\"\n                variant=\"outlined\"\n            >\n                ログイン\n            </LoadingButton>\n        </Box>\n        <Button component={ Link } to=\"/register\">\n            アカウントを持っていませんか？新規登録\n        </Button>\n    </div>\n    );\n};\n\nexport default Login"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}